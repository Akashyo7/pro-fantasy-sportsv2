version: '3.8'

services:
  # FastAPI Backend
  api:
    build:
      context: .
      target: api
    ports:
      - "8000:8000"
    environment:
      - FOOTBALL_DATA_API_KEY=${FOOTBALL_DATA_API_KEY}
      - API_HOST=0.0.0.0
      - API_PORT=8000
      - MODEL_UPDATE_FREQUENCY=weekly
      - CONFIDENCE_THRESHOLD=0.6
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    depends_on:
      - redis
    restart: unless-stopped
    networks:
      - football-net

  # Streamlit Frontend
  frontend:
    build:
      context: .
      target: frontend
    ports:
      - "8501:8501"
    environment:
      - API_HOST=api
      - API_PORT=8000
      - STREAMLIT_SERVER_PORT=8501
      - STREAMLIT_SERVER_HEADLESS=true
      - STREAMLIT_SERVER_ENABLE_CORS=false
      - STREAMLIT_BROWSER_GATHER_USAGE_STATS=false
    depends_on:
      - api
    restart: unless-stopped
    networks:
      - football-net

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - football-net

  # Model Training Service (run manually or scheduled)
  trainer:
    build:
      context: .
      target: trainer
    environment:
      - FOOTBALL_DATA_API_KEY=${FOOTBALL_DATA_API_KEY}
      - MODEL_TRAINING_MODE=docker
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    profiles:
      - training
    networks:
      - football-net

  # Nginx reverse proxy (for production)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - api
      - frontend
    restart: unless-stopped
    profiles:
      - production
    networks:
      - football-net

volumes:
  redis_data:

networks:
  football-net:
    driver: bridge